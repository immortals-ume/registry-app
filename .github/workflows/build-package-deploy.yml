name: CI Pipeline

on:
  push:
    branches: [ master, develop, main, feature.* ]
  pull_request:
    branches: [ master, develop ]

env:
  JAVA_VERSION: '21'
  DOCKER_REGISTRY: ghcr.io

jobs:
  setup:
    name: ☕ Set up Java
    runs-on: ubuntu-latest
    outputs:
      java-version: ${{ env.JAVA_VERSION }}
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: ☕ Set up Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: ${{ secrets.GITHUB_TOKEN }}
          overwrite-settings: true

  checkout-and-cache:
    name: 📂 Checkout & Cache
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: 💾 Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-

  build:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest
    needs: checkout-and-cache
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: ✅ Run Tests
        run: mvn test --batch-mode --no-transfer-progress

      - name: 🔧 Build Project
        run: mvn clean install --batch-mode --no-transfer-progress

  docker:
    name: 🐳 Docker Build & Push
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Build Docker Image
        run: docker build -t local-image:latest .

      - name: 🏷️ Tag Docker Image
        run: docker tag local-image:latest ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: 📤 Push Docker Image
        run: docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest